stages:
  - build_sarus_images
  - build_sarus_and_test
  - build_sarus_and_test_only_master_and_develop
  - publish_sarus_images
  - cleanup_sarus_images
  - deploy_to_dom
  - reframe_on_dom

build_sarus_images:
  stage: build_sarus_images
  script:
    - . CI/utility_docker_functions.bash Debug gcc.cmake $(pwd) ~/cache/ids/sarus standalone-build standalone-run
    - sarus-build-images

check_version_and_docs:
  stage: build_sarus_and_test
  script:
    - . CI/utility_docker_functions.bash Debug gcc.cmake $(pwd) ~/cache/ids/sarus standalone-build standalone-run
    - sarus-check-version-and-docs $(pwd)

standalone_archive_debug:
  stage: build_sarus_and_test
  script:
    - . ./CI/utility_docker_functions.bash Debug gcc.cmake $(pwd) ~/cache/ids/sarus standalone-build standalone-run
    - sarus-build-and-test

  artifacts:
    name: "sarus-Debug-$CI_COMMIT_REF_NAME"
    paths:
      - sarus-Debug.tar.gz
      - README.md

standalone_archive_release:
  stage: build_sarus_and_test
  script:
    - . ./CI/utility_docker_functions.bash Release gcc.cmake $(pwd) ~/cache/ids/sarus standalone-build standalone-run
    - sarus-build-and-test

  artifacts:
    name: "sarus-Release-$CI_COMMIT_REF_NAME"
    paths:
      - sarus-Release.tar.gz
      - README.md

.only_master_and_develop:
  stage: build_sarus_and_test_only_master_and_develop
  only:
    - master
    - develop

standalone_archive_debug_coverage:
  extends: .only_master_and_develop
  script:
    - . ./CI/utility_docker_functions.bash Debug gcc-gcov.cmake $(pwd) ~/cache/ids/sarus standalone-build standalone-run
    - sarus-build-and-test

from_source_centos7:
  extends: .only_master_and_develop
  script:
      - . ./CI/utility_docker_functions.bash Release gcc.cmake $(pwd) ~/cache/ids/sarus centos:7 centos:7
      - sarus-build-images
      - sarus-build-from-scratch-and-test

from_source_ubuntu18.04:
  extends: .only_master_and_develop
  script:
    - . ./CI/utility_docker_functions.bash Release gcc.cmake $(pwd) ~/cache/ids/sarus ubuntu:18.04 ubuntu:18.04
    - sarus-build-images
    - sarus-build-from-scratch-and-test

from_source_debian10:
  extends: .only_master_and_develop
  script:
    - . ./CI/utility_docker_functions.bash Release gcc.cmake $(pwd) ~/cache/ids/sarus debian:10 debian:10
    - sarus-build-images
    - sarus-build-from-scratch-and-test

from_source_debian10_asan:
  extends: .only_master_and_develop
  script:
    - . ./CI/utility_docker_functions.bash Debug gcc-asan.cmake $(pwd) ~/cache/ids/sarus debian:10 debian:10
    - sarus-build-images
    - sarus-build-from-scratch-and-test

spack_package:
  extends: .only_master_and_develop
  script:
      - docker_image=ethcscs/sarus-spack:1.2.0-ubuntu16.04
      - docker run --tty --rm --privileged --user root -v $(pwd):/sarus-source ${docker_image} /sarus-source/CI/run_spack_package_test.sh

publish_sarus_images:
  stage: publish_sarus_images
  only:
    - master
    - develop
  script:
    - . ./CI/utility_docker_functions.bash
    - sarus-publish-images

cleanup_sarus_images:
  stage: cleanup_sarus_images
  except:
    - master
    - develop
  script:
    - . ./CI/utility_docker_functions.bash
    - sarus-cleanup-images

deploy_to_dom:
  stage: deploy_to_dom
  only:
    - master
    - develop
    - tags
    - /^.*-reframe$/
  script:
    - "echo PWD: ${PWD}"
    - ARTIFACT=sarus-Release.tar.gz
    - NAME=${CI_COMMIT_TAG:-${CI_COMMIT_BRANCH}}
    - /home/gitlab-runner/sarus-ops/deploy_to_dom.sh ${ARTIFACT} ${NAME}

reframe_on_dom:
  stage: reframe_on_dom
  only:
    - master
    - develop
    - tags
    - /^.*-reframe$/
  script:
    - "echo PWD: ${PWD}"
    - NAME=${CI_COMMIT_TAG:-${CI_COMMIT_BRANCH}}
    - /home/gitlab-runner/sarus-ops/request_reframe_on_dom.sh ${NAME}