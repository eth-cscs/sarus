dist: bionic

services:
  - docker

before_install:
  - docker --version

jobs:
  include:
    - stage: "Build Sarus and Test"
      name: "Version and Docs"
      if: branch IN (master, develop, fix-travis)
      script:
      - . CI/utility_docker_functions.bash
      - sarus-build-images
      - sarus-check-version-and-docs $(pwd)

    - name: "Standalone + Unit and Integration tests"
      script:
      - . ./CI/utility_docker_functions.bash Release gcc.cmake $(pwd) $(pwd)/cache standalone-build standalone-run
      - sarus-build-images
      - sarus-build-and-test
      deploy:
        provider: releases
        edge: true
        name: ${TRAVIS_TAG}
        api_key:
          secure: YyLvhaDVjwcaVBcSqyP3RRgnqPfDorKFPIFrQfyjXBxWUgT/FbFs7yAjawOKk6n6LNDsq+ywqBtk7UmxJr/VR6NnWnoWQU0KyILWXfcw3qxIOowu3fGdrWwteEp8Vny5gzA7vM8G9hLLurb1RkZgAmz1wNrbMHH7U+HR8XfFZDgu5cZZvQTRvx2mJ/3cc/DNSUvCXkRowZRl7r41BZQNss0sBBy7FA3L+SkS4SjwY8xkhT22NU7Ce+hm+1R29qgXnTxhO9gN0PRfN2VmohYgvEm8OBGqLxEj05/yNgU3sLWtMHERxsKc5zR4RseuZxGVsDyshQ5oFj0yt3riaDlxNYan9zzPBj06UOputK/wHnEe7U3LbZLD1AIZqc+w1i80S94o3ipweLKkIDoDawbtnIdNYs95yTJD5CLptCFFnZL7L0K0y169zHiaes7O9K75VTcaEavazVICS0v2vBo0dXiw6JIRwUDRqx4vNalCfiuF0IQLxbg8g7SOGbe0vrATTT2XnSACenvakR2owkJ8XEDTSOatHcM2A1rVrTsBtNuuFHsEUllsF1laeYzQv85Sf5av4vgSHVfWPjXVycX2BqXBmzRxZ3MRebaw0M2eM4lUnJQ4ceSOQ8oO1TovYPKj1NDdAP2eNoF++pAdAJnJ6c81CXoedDtIURYjDRh00M8=
        file:
          - sarus-Release.tar.gz
          - README.md
        release_notes_file: RELEASE_NOTES.md
        overwrite: true
        draft: true
        on:
          repo: eth-cscs/sarus
          tags: true

    - name: "Test install from source CentOS 7"
      if: branch IN (master, develop, fix-travis)
      script:
      - . ./CI/utility_docker_functions.bash Release gcc.cmake $(pwd) $(pwd)/cache centos:7 centos:7
      - sarus-build-images
      - travis_wait 60 sarus-build-from-scratch-and-test

    - name: "Test install from source Ubuntu 18.04"
      if: branch IN (master, develop, fix-travis)
      script:
      - . ./CI/utility_docker_functions.bash Release gcc.cmake $(pwd) $(pwd)/cache ubuntu:18.04 ubuntu:18.04
      - sarus-build-images
      - sarus-build-from-scratch-and-test

    - name: "Test install from source Ubuntu 20.04"
      if: branch IN (master, develop, fix-travis)
      script:
      - . ./CI/utility_docker_functions.bash Release gcc.cmake $(pwd) $(pwd)/cache ubuntu:20.04 ubuntu:20.04
      - sarus-build-images
      - sarus-build-from-scratch-and-test

    - name: "Test install from source Debian 10 with AddressSanitizer"
      if: branch IN (master, develop, fix-travis)
      script:
      - . ./CI/utility_docker_functions.bash Debug gcc-asan.cmake $(pwd) $(pwd)/cache debian:10 debian:10
      - sarus-build-images
      - travis_wait 60 sarus-build-from-scratch-and-test

    - name: "Test Spack"
      if: branch IN (master, develop, fix-travis)
      script:
      - docker_image=ethcscs/sarus-spack:1.2.0-ubuntu16.04
      - travis_wait 60 docker run --tty --rm --privileged --user root -v $(pwd):/sarus-source ${docker_image} /sarus-source/CI/run_spack_package_test.sh

notifications:
  email:
    recipients:
      - taliaga@cscs.ch
      - amadonna@cscs.ch
    on_success: change
